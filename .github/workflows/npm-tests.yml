name: Run tests from package.json

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  run-tests-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm test
  
  release-from-master:
    runs-on: ubuntu-latest
    needs: run-tests-node
    if: ${{ startsWith(github.repository, 'svrooij/') && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm test
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      -
        name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true' && github.ref == 'refs/heads/master'
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: Docker login
        if: steps.semantic.outputs.new_release_published == 'true' && github.ref == 'refs/heads/master'
        run:
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Run Buildx
        if: steps.semantic.outputs.new_release_published == 'true' && github.ref == 'refs/heads/master'
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            --push \
            -t svrooij/sonos-tts-polly:latest \
            -t svrooij/sonos-tts-polly:${{ steps.semantic.outputs.new_release_version }} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg BUILD_VERSION=${{ steps.semantic.outputs.new_release_version }} \
            --build-arg VCS_REF=$(echo ${GITHUB_SHA} | cut -c1-8) \
            .
